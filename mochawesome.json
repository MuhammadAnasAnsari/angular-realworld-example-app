{
  "stats": {
    "suites": 12,
    "tests": 42,
    "passes": 20,
    "pending": 0,
    "failures": 22,
    "start": "2022-07-05T05:16:35.190Z",
    "end": "2022-07-05T05:45:10.497Z",
    "duration": 264279,
    "testsRegistered": 42,
    "passPercent": 47.61904761904762,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e8decd17-32f3-4ea9-8488-568d6671a5d0",
      "title": "",
      "fullFile": "cypress\\e2e\\secondTest.cy.js",
      "file": "cypress\\e2e\\secondTest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4dde7a42-47cb-47dd-b211-a8112137d4ac",
          "title": "Test log out",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify user can logout sucessfully",
              "fullTitle": "Test log out Verify user can logout sucessfully",
              "timedOut": null,
              "duration": 6537,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Settings').click();\ncy.contains(' Or click here to logout. ').click();\ncy.get('.navbar-nav').should('contain', ' Sign up');",
              "err": {},
              "uuid": "4f65b1a1-a0e5-45ac-b014-afeda7a9257c",
              "parentUUID": "4dde7a42-47cb-47dd-b211-a8112137d4ac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4f65b1a1-a0e5-45ac-b014-afeda7a9257c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6537,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0ed6fa71-a8cc-4e20-9815-91eb8362271f",
      "title": "",
      "fullFile": "cypress\\e2e\\firstTest.cy.js",
      "file": "cypress\\e2e\\firstTest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e7140a60-a0b6-4455-bb4d-d7e1abcd8168",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify correct request and response",
              "fullTitle": "Test with backend Verify correct request and response",
              "timedOut": null,
              "duration": 29095,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// to it.skip() this test\n// striked because they will be deprecated in future but working for now\n// cy.server() // to create the cypress server\n// cy.route('POST', '**/articles').as('postArticles') // route() for giving method, end point & as() for alias \ncy.intercept('POST', '**/articles').as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('This is title');\ncy.get('[formcontrolname=\"description\"]').type('this is description');\ncy.get('[formcontrolname=\"body\"]').type('this is a body of the Article'); // cy.get('[placeholder=\"Enter tags\"]').type('artcl_003')\ncy.get('button').contains('Publish Article').click({\n  force: true\n});\ncy.wait('@postArticles'); // @ used with alias to wait for the request\ncy.get('@postArticles').then(xhr => {\n  console.log(xhr); // to see the request in console log\n  expect(xhr.response.statusCode).to.equal(200); // Assertions\n  expect(xhr.request.body.article.body).to.equal('this is a body of the Article');\n  expect(xhr.response.body.article.description).to.equal('this is description');\n});",
              "err": {
                "message": "AssertionError: expected 307 to equal 200",
                "estack": "AssertionError: expected 307 to equal 200\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\e2e\\firstTest.cy.js:136:42)",
                "diff": "- 307\n+ 200\n"
              },
              "uuid": "cc8e2a54-500a-490b-96dd-47ddb6e402ea",
              "parentUUID": "e7140a60-a0b6-4455-bb4d-d7e1abcd8168",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Intercepting and modifying the request and response",
              "fullTitle": "Test with backend Intercepting and modifying the request and response",
              "timedOut": null,
              "duration": 9839,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// to it.skip() this test\n// striked because they will be deprecated in future but working for now\n// cy.server() // to create the cypress server\n// cy.route('POST', '**/articles').as('postArticles') // route() for giving method, end point & as() for alias \n// cy.intercept('POST', '**/articles', (req) =>{\n//     req.body.article.description = \"This is description 2\" // to modify the request\n// }).as('postArticles')\ncy.intercept('POST', '**/articles', req => {\n  req.reply(res => {\n    expect(res.body.article.description).to.equal('This is description');\n    res.body.article.description = \"This is description 2\";\n  });\n}).as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('446Deweerrs');\ncy.get('[formcontrolname=\"description\"]').type('This is description');\ncy.get('[formcontrolname=\"body\"]').type('This is a body of the Article'); // cy.get('[placeholder=\"Enter tags\"]').type('artcl_003')\ncy.contains('Publish Article').click();\ncy.wait('@postArticles'); // @ used with alias to wait for the request\ncy.get('@postArticles').then(fetch => {\n  // console.log(JSON.parse(JSON.stringify(xhr.response)))  // to see the request in console log\n  console.log(fetch.response);\n  expect(fetch.response.statusCode).to.equal(307); // Assertions\n  expect(fetch.response.body.article.body).to.equal('This is a body of the Article'); // console.log(xhr.request.body.article.description)\n  expect(fetch.response.body.article.description).to.equal('This is description 2');\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'description')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'description')\n    at eval (http://localhost:4200/__cypress/tests?p=cypress\\e2e\\firstTest.cy.js:152:33)",
                "diff": null
              },
              "uuid": "90bcbe4e-a774-422b-8b14-b58d71046f20",
              "parentUUID": "e7140a60-a0b6-4455-bb4d-d7e1abcd8168",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object",
              "fullTitle": "Test with backend should gave tags with routing object",
              "timedOut": null,
              "duration": 8778,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//it.only() to run only this test\ncy.get('.tag-list').should('contain', 'cypress').and('contain', 'automation').and('contain', 'testing');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.tag-list`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.tag-list`, but never found it.\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\e2e\\firstTest.cy.js:176:25)",
                "diff": null
              },
              "uuid": "fbdadcca-2ef5-43be-8ccb-e070ba51c60a",
              "parentUUID": "e7140a60-a0b6-4455-bb4d-d7e1abcd8168",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object",
              "fullTitle": "Test with backend should gave tags with routing object",
              "timedOut": null,
              "duration": 6948,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//it.only() to run only this test\ncy.get('.tag-list').should('contain', 'cypress').and('contain', 'automation').and('contain', 'testing');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.tag-list`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.tag-list`, but never found it.\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\e2e\\firstTest.cy.js:180:25)",
                "diff": null
              },
              "uuid": "7c448569-b600-426a-9035-05af120173ce",
              "parentUUID": "e7140a60-a0b6-4455-bb4d-d7e1abcd8168",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the global feed likes count",
              "fullTitle": "Test with backend Verify the global feed likes count",
              "timedOut": null,
              "duration": 12683,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Feed tab GET Request fixture call URL without json file small Response directly passing as param\n// cy.route('GET', '**/articles/feed*', '{\"articles\":[],\"articlesCount\":0}') \ncy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n}); // Global Feeb tab GET request fixture call URL through json file from fixtures json\n// cy.route('GET', '**/articles*', 'fixture:articles.json') \ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n}); // Verify the Global Feed tab fixture articles favorite count\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(listOfButtons => {\n  expect(listOfButtons[0]).to.contain(1);\n  expect(listOfButtons[1]).to.contain(5);\n}); // fixture() method to read the fixture files\ncy.fixture('articles').then(file => {\n  const articlelink = file.articles[1].slug; // arcticle name/link from the fixture mocked responsed json file\n  // cy.route('POST', '**/articles/'+articlelink+'/favorite', file) // concatenate the POST method request URL w.r.t to our fixture file\n  cy.intercept('POST', '**/articles/' + articlelink + '/favorite', file);\n});\ncy.get('app-article-list button').eq(1) // for second article which on 1 index\n.click().should('contain', '4'); //assertion fav. icon after click on fav. icon",
              "err": {},
              "uuid": "6445bdc8-584c-4fa0-87ff-46da73d91bd5",
              "parentUUID": "e7140a60-a0b6-4455-bb4d-d7e1abcd8168",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To delete a new article in global feed",
              "fullTitle": "Test with backend To delete a new article in global feed",
              "timedOut": null,
              "duration": 12053,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const bodyRequest = {\n  \"article\": {\n    \"tagList\": [],\n    \"title\": \"Request from APIs\",\n    \"description\": \"API testing is easy\",\n    \"body\": \"Angular is cool\"\n  }\n}; // 1 Call login API\n//   cy.request('POST', Cypress.env('apiUrl')+'/api/users/login', UserCredentials)\n//   .its('body').then(body =>{\n//       const token = body.user.token\ncy.get('@token').then(token => {\n  // token getting from commands.js\n  // 2 get token from login API & then call articles API with authorization\n  cy.request({\n    url: Cypress.env('apiUrl') + '/api/articles/',\n    //cocatenate the apiUrl from env variable\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    // \"Token\" text concatenation with token value from variable\n    method: 'POST',\n    body: bodyRequest\n  }).then(response => {\n    expect(response.status).to.equal(200); // Assertion for 200 response match\n  }); // UI actions\n  cy.wait(500);\n  cy.contains(' Global Feed ').click();\n  cy.get('.article-preview').first().click();\n  cy.get('.article-actions').contains(' Delete Article ').click(); // get Articles objects listing after deletion of first & assertion\n  cy.wait(500);\n  cy.request({\n    url: Cypress.env('apiUrl') + '/api/articles?limit=10&offset=0',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    method: 'GET'\n  }).its('body').then(body => {\n    //   console.log(body)\n    expect(body.articles[0].title).not.to.equal('Request from APIs');\n  });\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.article-preview`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.article-preview`, but never found it.\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\e2e\\firstTest.cy.js:241:10)",
                "diff": null
              },
              "uuid": "65712b3b-0981-49f3-83ef-39b0ccd3b2c6",
              "parentUUID": "e7140a60-a0b6-4455-bb4d-d7e1abcd8168",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6445bdc8-584c-4fa0-87ff-46da73d91bd5"
          ],
          "failures": [
            "cc8e2a54-500a-490b-96dd-47ddb6e402ea",
            "90bcbe4e-a774-422b-8b14-b58d71046f20",
            "fbdadcca-2ef5-43be-8ccb-e070ba51c60a",
            "7c448569-b600-426a-9035-05af120173ce",
            "65712b3b-0981-49f3-83ef-39b0ccd3b2c6"
          ],
          "pending": [],
          "skipped": [],
          "duration": 79396,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3bf380cb-5072-4b28-a76a-90de5f4c441d",
      "title": "",
      "fullFile": "cypress\\e2e\\secondTest.cy.js",
      "file": "cypress\\e2e\\secondTest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "95c02639-37c3-4c07-a5f1-d5a1b08c508a",
          "title": "Test log out",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify user can logout sucessfully",
              "fullTitle": "Test log out Verify user can logout sucessfully",
              "timedOut": null,
              "duration": 7834,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.contains('Settings').click();\ncy.contains(' Or click here to logout. ').click();\ncy.get('.navbar-nav').should('contain', ' Sign up');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Settings' but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Settings' but never did.\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\e2e\\secondTest.cy.js:104:8)",
                "diff": null
              },
              "uuid": "88f6f44a-a68a-4510-8166-0739ae3f90d8",
              "parentUUID": "95c02639-37c3-4c07-a5f1-d5a1b08c508a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "88f6f44a-a68a-4510-8166-0739ae3f90d8"
          ],
          "pending": [],
          "skipped": [],
          "duration": 7834,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "03efe3e6-edbf-4e0f-a1e3-73739f3ffd55",
      "title": "",
      "fullFile": "cypress\\e2e\\firstTest.cy.js",
      "file": "cypress\\e2e\\firstTest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6cb5e73b-e3f5-44ec-a39a-66e92b872a98",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify correct request and response",
              "fullTitle": "Test with backend Verify correct request and response",
              "timedOut": null,
              "duration": 7222,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// to it.skip() this test\n// striked because they will be deprecated in future but working for now\n// cy.server() // to create the cypress server\n// cy.route('POST', '**/articles').as('postArticles') // route() for giving method, end point & as() for alias \ncy.intercept('POST', '**/articles').as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('This is title');\ncy.get('[formcontrolname=\"description\"]').type('this is description');\ncy.get('[formcontrolname=\"body\"]').type('this is a body of the Article'); // cy.get('[placeholder=\"Enter tags\"]').type('artcl_003')\ncy.get('button').contains('Publish Article').click({\n  force: true\n});\ncy.wait('@postArticles'); // @ used with alias to wait for the request\ncy.get('@postArticles').then(xhr => {\n  console.log(xhr); // to see the request in console log\n  expect(xhr.response.statusCode).to.equal(200); // Assertions\n  expect(xhr.request.body.article.body).to.equal('this is a body of the Article');\n  expect(xhr.response.body.article.description).to.equal('this is description');\n});",
              "err": {
                "message": "AssertionError: expected 307 to equal 200",
                "estack": "AssertionError: expected 307 to equal 200\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\e2e\\firstTest.cy.js:136:42)",
                "diff": "- 307\n+ 200\n"
              },
              "uuid": "89c80581-931d-4e26-8b1a-ecf312e5d99a",
              "parentUUID": "6cb5e73b-e3f5-44ec-a39a-66e92b872a98",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Intercepting and modifying the request and response",
              "fullTitle": "Test with backend Intercepting and modifying the request and response",
              "timedOut": null,
              "duration": 4532,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// to it.skip() this test\n// striked because they will be deprecated in future but working for now\n// cy.server() // to create the cypress server\n// cy.route('POST', '**/articles').as('postArticles') // route() for giving method, end point & as() for alias \n// cy.intercept('POST', '**/articles', (req) =>{\n//     req.body.article.description = \"This is description 2\" // to modify the request\n// }).as('postArticles')\ncy.intercept('POST', '**/articles', req => {\n  req.reply(res => {\n    expect(res.body.article.description).to.equal('This is description');\n    res.body.article.description = \"This is description 2\";\n  });\n}).as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('446Deweerrs');\ncy.get('[formcontrolname=\"description\"]').type('This is description');\ncy.get('[formcontrolname=\"body\"]').type('This is a body of the Article'); // cy.get('[placeholder=\"Enter tags\"]').type('artcl_003')\ncy.contains('Publish Article').click();\ncy.wait('@postArticles'); // @ used with alias to wait for the request\ncy.get('@postArticles').then(fetch => {\n  // console.log(JSON.parse(JSON.stringify(xhr.response)))  // to see the request in console log\n  console.log(fetch.response);\n  expect(fetch.response.statusCode).to.equal(307); // Assertions\n  expect(fetch.response.body.article.body).to.equal('This is a body of the Article'); // console.log(xhr.request.body.article.description)\n  expect(fetch.response.body.article.description).to.equal('This is description 2');\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'description')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'description')\n    at eval (http://localhost:4200/__cypress/tests?p=cypress\\e2e\\firstTest.cy.js:152:33)",
                "diff": null
              },
              "uuid": "6d73d1d5-7561-431a-b816-906bf0ec918b",
              "parentUUID": "6cb5e73b-e3f5-44ec-a39a-66e92b872a98",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object",
              "fullTitle": "Test with backend should gave tags with routing object",
              "timedOut": null,
              "duration": 4669,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//it.only() to run only this test\ncy.get('.tag-list').should('contain', 'cypress').and('contain', 'automation').and('contain', 'testing');",
              "err": {},
              "uuid": "61333eee-c209-4b88-9005-4a101e13ef84",
              "parentUUID": "6cb5e73b-e3f5-44ec-a39a-66e92b872a98",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object",
              "fullTitle": "Test with backend should gave tags with routing object",
              "timedOut": null,
              "duration": 2462,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//it.only() to run only this test\ncy.get('.tag-list').should('contain', 'cypress').and('contain', 'automation').and('contain', 'testing');",
              "err": {},
              "uuid": "37b9b02a-00f9-4242-86c6-5f953d384865",
              "parentUUID": "6cb5e73b-e3f5-44ec-a39a-66e92b872a98",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the global feed likes count",
              "fullTitle": "Test with backend Verify the global feed likes count",
              "timedOut": null,
              "duration": 6069,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Feed tab GET Request fixture call URL without json file small Response directly passing as param\n// cy.route('GET', '**/articles/feed*', '{\"articles\":[],\"articlesCount\":0}') \ncy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n}); // Global Feeb tab GET request fixture call URL through json file from fixtures json\n// cy.route('GET', '**/articles*', 'fixture:articles.json') \ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n}); // Verify the Global Feed tab fixture articles favorite count\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(listOfButtons => {\n  expect(listOfButtons[0]).to.contain(1);\n  expect(listOfButtons[1]).to.contain(5);\n}); // fixture() method to read the fixture files\ncy.fixture('articles').then(file => {\n  const articlelink = file.articles[1].slug; // arcticle name/link from the fixture mocked responsed json file\n  // cy.route('POST', '**/articles/'+articlelink+'/favorite', file) // concatenate the POST method request URL w.r.t to our fixture file\n  cy.intercept('POST', '**/articles/' + articlelink + '/favorite', file);\n});\ncy.get('app-article-list button').eq(1) // for second article which on 1 index\n.click().should('contain', '4'); //assertion fav. icon after click on fav. icon",
              "err": {},
              "uuid": "34cbb7ff-4c2e-4105-a441-14a1a2e8470c",
              "parentUUID": "6cb5e73b-e3f5-44ec-a39a-66e92b872a98",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To delete a new article in global feed",
              "fullTitle": "Test with backend To delete a new article in global feed",
              "timedOut": null,
              "duration": 3690,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const bodyRequest = {\n  \"article\": {\n    \"tagList\": [],\n    \"title\": \"Request from APIs\",\n    \"description\": \"API testing is easy\",\n    \"body\": \"Angular is cool\"\n  }\n}; // 1 Call login API\n//   cy.request('POST', Cypress.env('apiUrl')+'/api/users/login', UserCredentials)\n//   .its('body').then(body =>{\n//       const token = body.user.token\ncy.get('@token').then(token => {\n  // token getting from commands.js\n  // 2 get token from login API & then call articles API with authorization\n  cy.request({\n    url: Cypress.env('apiUrl') + '/api/articles/',\n    //cocatenate the apiUrl from env variable\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    // \"Token\" text concatenation with token value from variable\n    method: 'POST',\n    body: bodyRequest\n  }).then(response => {\n    expect(response.status).to.equal(200); // Assertion for 200 response match\n  }); // UI actions\n  cy.wait(500);\n  cy.contains(' Global Feed ').click();\n  cy.get('.article-preview').first().click();\n  cy.get('.article-actions').contains(' Delete Article ').click(); // get Articles objects listing after deletion of first & assertion\n  cy.wait(500);\n  cy.request({\n    url: Cypress.env('apiUrl') + '/api/articles?limit=10&offset=0',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    method: 'GET'\n  }).its('body').then(body => {\n    //   console.log(body)\n    expect(body.articles[0].title).not.to.equal('Request from APIs');\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttps://conduit.productionready.io/api/articles/\n\nThe response we received from your web server was:\n\n  > 422: Unprocessable Entity\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://conduit.productionready.io/api/articles/\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFydGVtLmJvbmRhcjE2QGdtYWlsLmNvbSIsInVzZXJuYW1lIjoiYXJ0ZW0iLCJpYXQiOjE2NTY5OTkwMTIsImV4cCI6MTY2MjE4MzAxMn0.5BoIA12kkerkvWpy_EJLwGG0uXsg6AxQAr3zF1Ji8EA\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/10.0.1 Chrome/100.0.4896.75 Electron/18.0.4 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 115,\n  \"referer\": \"https://conduit.productionready.io/api/articles/\"\n}\nBody: {\"article\":{\"tagList\":[],\"title\":\"Request from APIs\",\"description\":\"API testing is easy\",\"body\":\"Angular is cool\"}}\nRedirects: [\n  \"307: https://api.realworld.io/api/articles/\"\n]\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 422 - Unprocessable Entity\nHeaders: {\n  \"date\": \"Tue, 05 Jul 2022 05:30:15 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"39\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"27-BNeuaWQ7DHvW/r+pl+qdJiF06Is\\\"\",\n  \"via\": \"1.1 vegur\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=7SfESgxP9JpsylPFr6ZhE8wqYQ0SEzLdG6cUpdWvSgvE79ynyvBbbBe0XuOAO2L2iGqWr%2FM%2Fi2wTt2RsH2DoeAFVDIpdxgBDpSCSEaCda7iRUQuWN45CIM%2Fm9g2JN0alynpP\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"cf-ray\": \"725db5211c734da7-SIN\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n}\nBody: {\n  \"errors\": {\n    \"title\": [\n      \"must be unique\"\n    ]\n  }\n}\n\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttps://conduit.productionready.io/api/articles/\n\nThe response we received from your web server was:\n\n  > 422: Unprocessable Entity\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://conduit.productionready.io/api/articles/\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFydGVtLmJvbmRhcjE2QGdtYWlsLmNvbSIsInVzZXJuYW1lIjoiYXJ0ZW0iLCJpYXQiOjE2NTY5OTkwMTIsImV4cCI6MTY2MjE4MzAxMn0.5BoIA12kkerkvWpy_EJLwGG0uXsg6AxQAr3zF1Ji8EA\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/10.0.1 Chrome/100.0.4896.75 Electron/18.0.4 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 115,\n  \"referer\": \"https://conduit.productionready.io/api/articles/\"\n}\nBody: {\"article\":{\"tagList\":[],\"title\":\"Request from APIs\",\"description\":\"API testing is easy\",\"body\":\"Angular is cool\"}}\nRedirects: [\n  \"307: https://api.realworld.io/api/articles/\"\n]\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 422 - Unprocessable Entity\nHeaders: {\n  \"date\": \"Tue, 05 Jul 2022 05:30:15 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"39\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"27-BNeuaWQ7DHvW/r+pl+qdJiF06Is\\\"\",\n  \"via\": \"1.1 vegur\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=7SfESgxP9JpsylPFr6ZhE8wqYQ0SEzLdG6cUpdWvSgvE79ynyvBbbBe0XuOAO2L2iGqWr%2FM%2Fi2wTt2RsH2DoeAFVDIpdxgBDpSCSEaCda7iRUQuWN45CIM%2Fm9g2JN0alynpP\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"cf-ray\": \"725db5211c734da7-SIN\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n}\nBody: {\n  \"errors\": {\n    \"title\": [\n      \"must be unique\"\n    ]\n  }\n}\n\n\nhttps://on.cypress.io/request\n    at http://localhost:4200/__cypress/runner/cypress_runner.js:158470:80\n    at tryCatcher (http://localhost:4200/__cypress/runner/cypress_runner.js:13012:23)\n    at Promise._settlePromiseFromHandler (http://localhost:4200/__cypress/runner/cypress_runner.js:10947:31)\n    at Promise._settlePromise (http://localhost:4200/__cypress/runner/cypress_runner.js:11004:18)\n    at Promise._settlePromise0 (http://localhost:4200/__cypress/runner/cypress_runner.js:11049:10)\n    at Promise._settlePromises (http://localhost:4200/__cypress/runner/cypress_runner.js:11129:18)\n    at _drainQueueStep (http://localhost:4200/__cypress/runner/cypress_runner.js:7719:12)\n    at _drainQueue (http://localhost:4200/__cypress/runner/cypress_runner.js:7712:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:7728:5)\n    at Async.drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:7598:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\e2e\\firstTest.cy.js:226:10)",
                "diff": null
              },
              "uuid": "5665f5f3-d557-4482-948f-86cfffe21223",
              "parentUUID": "6cb5e73b-e3f5-44ec-a39a-66e92b872a98",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "61333eee-c209-4b88-9005-4a101e13ef84",
            "37b9b02a-00f9-4242-86c6-5f953d384865",
            "34cbb7ff-4c2e-4105-a441-14a1a2e8470c"
          ],
          "failures": [
            "89c80581-931d-4e26-8b1a-ecf312e5d99a",
            "6d73d1d5-7561-431a-b816-906bf0ec918b",
            "5665f5f3-d557-4482-948f-86cfffe21223"
          ],
          "pending": [],
          "skipped": [],
          "duration": 28644,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "17f470cb-c3ec-42f2-94eb-6f7c987c8de3",
      "title": "",
      "fullFile": "cypress\\e2e\\secondTest.cy.js",
      "file": "cypress\\e2e\\secondTest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "155f3937-b5bb-4c62-b473-de3bb88cdc74",
          "title": "Test log out",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify user can logout sucessfully",
              "fullTitle": "Test log out Verify user can logout sucessfully",
              "timedOut": null,
              "duration": 9765,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.contains('Settings').click();\ncy.contains(' Or click here to logout. ').click();\ncy.get('.navbar-nav').should('contain', ' Sign up1');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected '<ul.nav.navbar-nav.pull-xs-right>' to contain ' Sign up1'",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected '<ul.nav.navbar-nav.pull-xs-right>' to contain ' Sign up1'\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\e2e\\secondTest.cy.js:106:27)",
                "diff": null
              },
              "uuid": "2acdfc05-556d-49d5-b282-772503a0297d",
              "parentUUID": "155f3937-b5bb-4c62-b473-de3bb88cdc74",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "2acdfc05-556d-49d5-b282-772503a0297d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 9765,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fd4dcf1a-7614-44c9-97c8-9ad6c255dd1a",
      "title": "",
      "fullFile": "cypress\\e2e\\firstTest.cy.js",
      "file": "cypress\\e2e\\firstTest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3beeb55e-8af3-468a-a55b-9c031f514848",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify correct request and response",
              "fullTitle": "Test with backend Verify correct request and response",
              "timedOut": null,
              "duration": 7792,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// to it.skip() this test\n// striked because they will be deprecated in future but working for now\n// cy.server() // to create the cypress server\n// cy.route('POST', '**/articles').as('postArticles') // route() for giving method, end point & as() for alias \ncy.intercept('POST', '**/articles').as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('This is title');\ncy.get('[formcontrolname=\"description\"]').type('this is description');\ncy.get('[formcontrolname=\"body\"]').type('this is a body of the Article'); // cy.get('[placeholder=\"Enter tags\"]').type('artcl_003')\ncy.get('button').contains('Publish Article').click({\n  force: true\n});\ncy.wait('@postArticles'); // @ used with alias to wait for the request\ncy.get('@postArticles').then(xhr => {\n  console.log(xhr); // to see the request in console log\n  expect(xhr.response.statusCode).to.equal(200); // Assertions\n  expect(xhr.request.body.article.body).to.equal('this is a body of the Article');\n  expect(xhr.response.body.article.description).to.equal('this is description');\n});",
              "err": {
                "message": "AssertionError: expected 307 to equal 200",
                "estack": "AssertionError: expected 307 to equal 200\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\e2e\\firstTest.cy.js:136:42)",
                "diff": "- 307\n+ 200\n"
              },
              "uuid": "495630a8-6f04-4dee-a6e3-3bb9ab5bfaf9",
              "parentUUID": "3beeb55e-8af3-468a-a55b-9c031f514848",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Intercepting and modifying the request and response",
              "fullTitle": "Test with backend Intercepting and modifying the request and response",
              "timedOut": null,
              "duration": 6225,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// to it.skip() this test\n// striked because they will be deprecated in future but working for now\n// cy.server() // to create the cypress server\n// cy.route('POST', '**/articles').as('postArticles') // route() for giving method, end point & as() for alias \n// cy.intercept('POST', '**/articles', (req) =>{\n//     req.body.article.description = \"This is description 2\" // to modify the request\n// }).as('postArticles')\ncy.intercept('POST', '**/articles', req => {\n  req.reply(res => {\n    expect(res.body.article.description).to.equal('This is description');\n    res.body.article.description = \"This is description 2\";\n  });\n}).as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('446Deweerrs');\ncy.get('[formcontrolname=\"description\"]').type('This is description');\ncy.get('[formcontrolname=\"body\"]').type('This is a body of the Article'); // cy.get('[placeholder=\"Enter tags\"]').type('artcl_003')\ncy.contains('Publish Article').click();\ncy.wait('@postArticles'); // @ used with alias to wait for the request\ncy.get('@postArticles').then(fetch => {\n  // console.log(JSON.parse(JSON.stringify(xhr.response)))  // to see the request in console log\n  console.log(fetch.response);\n  expect(fetch.response.statusCode).to.equal(307); // Assertions\n  expect(fetch.response.body.article.body).to.equal('This is a body of the Article'); // console.log(xhr.request.body.article.description)\n  expect(fetch.response.body.article.description).to.equal('This is description 2');\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'description')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'description')\n    at eval (http://localhost:4200/__cypress/tests?p=cypress\\e2e\\firstTest.cy.js:152:33)",
                "diff": null
              },
              "uuid": "93468043-99f6-4839-bfd2-9736814eebb3",
              "parentUUID": "3beeb55e-8af3-468a-a55b-9c031f514848",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object",
              "fullTitle": "Test with backend should gave tags with routing object",
              "timedOut": null,
              "duration": 5015,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//it.only() to run only this test\ncy.get('.tag-list').should('contain', 'cypress').and('contain', 'automation').and('contain', 'testing');",
              "err": {},
              "uuid": "07342eb3-3c81-48ee-aa59-ef98105ad42c",
              "parentUUID": "3beeb55e-8af3-468a-a55b-9c031f514848",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object",
              "fullTitle": "Test with backend should gave tags with routing object",
              "timedOut": null,
              "duration": 2786,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//it.only() to run only this test\ncy.get('.tag-list').should('contain', 'cypress').and('contain', 'automation').and('contain', 'testing');",
              "err": {},
              "uuid": "6a40a586-58be-41ab-b07e-c2df3917eea0",
              "parentUUID": "3beeb55e-8af3-468a-a55b-9c031f514848",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the global feed likes count",
              "fullTitle": "Test with backend Verify the global feed likes count",
              "timedOut": null,
              "duration": 5629,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Feed tab GET Request fixture call URL without json file small Response directly passing as param\n// cy.route('GET', '**/articles/feed*', '{\"articles\":[],\"articlesCount\":0}') \ncy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n}); // Global Feeb tab GET request fixture call URL through json file from fixtures json\n// cy.route('GET', '**/articles*', 'fixture:articles.json') \ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n}); // Verify the Global Feed tab fixture articles favorite count\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(listOfButtons => {\n  expect(listOfButtons[0]).to.contain(1);\n  expect(listOfButtons[1]).to.contain(5);\n}); // fixture() method to read the fixture files\ncy.fixture('articles').then(file => {\n  const articlelink = file.articles[1].slug; // arcticle name/link from the fixture mocked responsed json file\n  // cy.route('POST', '**/articles/'+articlelink+'/favorite', file) // concatenate the POST method request URL w.r.t to our fixture file\n  cy.intercept('POST', '**/articles/' + articlelink + '/favorite', file);\n});\ncy.get('app-article-list button').eq(1) // for second article which on 1 index\n.click().should('contain', '4'); //assertion fav. icon after click on fav. icon",
              "err": {},
              "uuid": "2ccf6256-ab39-4838-9de6-af4bcaccdb41",
              "parentUUID": "3beeb55e-8af3-468a-a55b-9c031f514848",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To delete a new article in global feed",
              "fullTitle": "Test with backend To delete a new article in global feed",
              "timedOut": null,
              "duration": 2516,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const bodyRequest = {\n  \"article\": {\n    \"tagList\": [],\n    \"title\": \"Request from APIs\",\n    \"description\": \"API testing is easy\",\n    \"body\": \"Angular is cool\"\n  }\n}; // 1 Call login API\n//   cy.request('POST', Cypress.env('apiUrl')+'/api/users/login', UserCredentials)\n//   .its('body').then(body =>{\n//       const token = body.user.token\ncy.get('@token').then(token => {\n  // token getting from commands.js\n  // 2 get token from login API & then call articles API with authorization\n  cy.request({\n    url: Cypress.env('apiUrl') + '/api/articles/',\n    //cocatenate the apiUrl from env variable\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    // \"Token\" text concatenation with token value from variable\n    method: 'POST',\n    body: bodyRequest\n  }).then(response => {\n    expect(response.status).to.equal(200); // Assertion for 200 response match\n  }); // UI actions\n  cy.wait(500);\n  cy.contains(' Global Feed ').click();\n  cy.get('.article-preview').first().click();\n  cy.get('.article-actions').contains(' Delete Article ').click(); // get Articles objects listing after deletion of first & assertion\n  cy.wait(500);\n  cy.request({\n    url: Cypress.env('apiUrl') + '/api/articles?limit=10&offset=0',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    method: 'GET'\n  }).its('body').then(body => {\n    //   console.log(body)\n    expect(body.articles[0].title).not.to.equal('Request from APIs');\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttps://conduit.productionready.io/api/articles/\n\nThe response we received from your web server was:\n\n  > 422: Unprocessable Entity\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://conduit.productionready.io/api/articles/\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFydGVtLmJvbmRhcjE2QGdtYWlsLmNvbSIsInVzZXJuYW1lIjoiYXJ0ZW0iLCJpYXQiOjE2NTY5OTkxNzksImV4cCI6MTY2MjE4MzE3OX0.cFwdEhMJpwDd-hTuyOwTa0FEVc59lmmRJnwRYH0OuDE\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/10.0.1 Chrome/100.0.4896.75 Electron/18.0.4 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 115,\n  \"referer\": \"https://conduit.productionready.io/api/articles/\"\n}\nBody: {\"article\":{\"tagList\":[],\"title\":\"Request from APIs\",\"description\":\"API testing is easy\",\"body\":\"Angular is cool\"}}\nRedirects: [\n  \"307: https://api.realworld.io/api/articles/\"\n]\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 422 - Unprocessable Entity\nHeaders: {\n  \"date\": \"Tue, 05 Jul 2022 05:33:00 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"39\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"27-BNeuaWQ7DHvW/r+pl+qdJiF06Is\\\"\",\n  \"via\": \"1.1 vegur\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=S9rv2zc%2FlL1EhzUlEJrranqjQXVBo56ku10pwDeOEvOv35IRLBn5wYJLc0OQjqPX3K%2FFjtATpbskLjevZYPQMn6lGIs0u%2B9rd%2FY5qCyQYJlL%2FVKEdO6ZO4GDZ9OqG869CEXx\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"cf-ray\": \"725db92c2ff6a07b-SIN\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n}\nBody: {\n  \"errors\": {\n    \"title\": [\n      \"must be unique\"\n    ]\n  }\n}\n\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttps://conduit.productionready.io/api/articles/\n\nThe response we received from your web server was:\n\n  > 422: Unprocessable Entity\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://conduit.productionready.io/api/articles/\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFydGVtLmJvbmRhcjE2QGdtYWlsLmNvbSIsInVzZXJuYW1lIjoiYXJ0ZW0iLCJpYXQiOjE2NTY5OTkxNzksImV4cCI6MTY2MjE4MzE3OX0.cFwdEhMJpwDd-hTuyOwTa0FEVc59lmmRJnwRYH0OuDE\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/10.0.1 Chrome/100.0.4896.75 Electron/18.0.4 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 115,\n  \"referer\": \"https://conduit.productionready.io/api/articles/\"\n}\nBody: {\"article\":{\"tagList\":[],\"title\":\"Request from APIs\",\"description\":\"API testing is easy\",\"body\":\"Angular is cool\"}}\nRedirects: [\n  \"307: https://api.realworld.io/api/articles/\"\n]\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 422 - Unprocessable Entity\nHeaders: {\n  \"date\": \"Tue, 05 Jul 2022 05:33:00 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"39\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"27-BNeuaWQ7DHvW/r+pl+qdJiF06Is\\\"\",\n  \"via\": \"1.1 vegur\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=S9rv2zc%2FlL1EhzUlEJrranqjQXVBo56ku10pwDeOEvOv35IRLBn5wYJLc0OQjqPX3K%2FFjtATpbskLjevZYPQMn6lGIs0u%2B9rd%2FY5qCyQYJlL%2FVKEdO6ZO4GDZ9OqG869CEXx\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"cf-ray\": \"725db92c2ff6a07b-SIN\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n}\nBody: {\n  \"errors\": {\n    \"title\": [\n      \"must be unique\"\n    ]\n  }\n}\n\n\nhttps://on.cypress.io/request\n    at http://localhost:4200/__cypress/runner/cypress_runner.js:158470:80\n    at tryCatcher (http://localhost:4200/__cypress/runner/cypress_runner.js:13012:23)\n    at Promise._settlePromiseFromHandler (http://localhost:4200/__cypress/runner/cypress_runner.js:10947:31)\n    at Promise._settlePromise (http://localhost:4200/__cypress/runner/cypress_runner.js:11004:18)\n    at Promise._settlePromise0 (http://localhost:4200/__cypress/runner/cypress_runner.js:11049:10)\n    at Promise._settlePromises (http://localhost:4200/__cypress/runner/cypress_runner.js:11129:18)\n    at _drainQueueStep (http://localhost:4200/__cypress/runner/cypress_runner.js:7719:12)\n    at _drainQueue (http://localhost:4200/__cypress/runner/cypress_runner.js:7712:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:7728:5)\n    at Async.drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:7598:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\e2e\\firstTest.cy.js:226:10)",
                "diff": null
              },
              "uuid": "52f83cdb-5488-4eca-8064-eb2e773f1378",
              "parentUUID": "3beeb55e-8af3-468a-a55b-9c031f514848",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "07342eb3-3c81-48ee-aa59-ef98105ad42c",
            "6a40a586-58be-41ab-b07e-c2df3917eea0",
            "2ccf6256-ab39-4838-9de6-af4bcaccdb41"
          ],
          "failures": [
            "495630a8-6f04-4dee-a6e3-3bb9ab5bfaf9",
            "93468043-99f6-4839-bfd2-9736814eebb3",
            "52f83cdb-5488-4eca-8064-eb2e773f1378"
          ],
          "pending": [],
          "skipped": [],
          "duration": 29963,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e0188215-8490-4356-9023-303a4c5689e6",
      "title": "",
      "fullFile": "cypress\\e2e\\secondTest.cy.js",
      "file": "cypress\\e2e\\secondTest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "946ebf62-d97e-4af7-b7f6-18e320569dc7",
          "title": "Test log out",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify user can logout sucessfully",
              "fullTitle": "Test log out Verify user can logout sucessfully",
              "timedOut": null,
              "duration": 3551,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Settings').click();\ncy.contains(' Or click here to logout. ').click();\ncy.get('.navbar-nav').should('contain', ' Sign up');",
              "err": {},
              "uuid": "f9b9e6dc-23a9-4dad-89f2-8410cc15e4db",
              "parentUUID": "946ebf62-d97e-4af7-b7f6-18e320569dc7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f9b9e6dc-23a9-4dad-89f2-8410cc15e4db"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3551,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fff317dd-1077-48dd-b8e7-1bd1da55e072",
      "title": "",
      "fullFile": "cypress\\e2e\\firstTest.cy.js",
      "file": "cypress\\e2e\\firstTest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ad1bc93d-0914-4e40-86df-152d11b278dd",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify correct request and response",
              "fullTitle": "Test with backend Verify correct request and response",
              "timedOut": null,
              "duration": 7476,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// to it.skip() this test\n// striked because they will be deprecated in future but working for now\n// cy.server() // to create the cypress server\n// cy.route('POST', '**/articles').as('postArticles') // route() for giving method, end point & as() for alias \ncy.intercept('POST', '**/articles').as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('This is title');\ncy.get('[formcontrolname=\"description\"]').type('this is description');\ncy.get('[formcontrolname=\"body\"]').type('this is a body of the Article'); // cy.get('[placeholder=\"Enter tags\"]').type('artcl_003')\ncy.get('button').contains('Publish Article').click({\n  force: true\n});\ncy.wait('@postArticles'); // @ used with alias to wait for the request\ncy.get('@postArticles').then(xhr => {\n  console.log(xhr); // to see the request in console log\n  expect(xhr.response.statusCode).to.equal(307); // Assertions\n  expect(xhr.request.body.article.body).to.equal('this is a body of the Article');\n  expect(xhr.response.body.article.description).to.equal('this is description');\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'description')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'description')\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\e2e\\firstTest.cy.js:139:40)",
                "diff": null
              },
              "uuid": "3ed4c6b0-8c4e-4085-bda9-8cc3a53d567b",
              "parentUUID": "ad1bc93d-0914-4e40-86df-152d11b278dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Intercepting and modifying the request and response",
              "fullTitle": "Test with backend Intercepting and modifying the request and response",
              "timedOut": null,
              "duration": 5278,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// to it.skip() this test\n// striked because they will be deprecated in future but working for now\n// cy.server() // to create the cypress server\n// cy.route('POST', '**/articles').as('postArticles') // route() for giving method, end point & as() for alias \n// cy.intercept('POST', '**/articles', (req) =>{\n//     req.body.article.description = \"This is description 2\" // to modify the request\n// }).as('postArticles')\ncy.intercept('POST', '**/articles', req => {\n  req.reply(res => {\n    expect(res.body.article.description).to.equal('This is description');\n    res.body.article.description = \"This is description 2\";\n  });\n}).as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('446Deweerrs');\ncy.get('[formcontrolname=\"description\"]').type('This is description');\ncy.get('[formcontrolname=\"body\"]').type('This is a body of the Article'); // cy.get('[placeholder=\"Enter tags\"]').type('artcl_003')\ncy.contains('Publish Article').click();\ncy.wait('@postArticles'); // @ used with alias to wait for the request\ncy.get('@postArticles').then(fetch => {\n  // console.log(JSON.parse(JSON.stringify(xhr.response)))  // to see the request in console log\n  console.log(fetch.response);\n  expect(fetch.response.statusCode).to.equal(307); // Assertions\n  expect(fetch.response.body.article.body).to.equal('This is a body of the Article'); // console.log(xhr.request.body.article.description)\n  expect(fetch.response.body.article.description).to.equal('This is description 2');\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'description')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'description')\n    at eval (http://localhost:4200/__cypress/tests?p=cypress\\e2e\\firstTest.cy.js:152:33)",
                "diff": null
              },
              "uuid": "ae062c53-ff40-4044-9f85-47e273616d32",
              "parentUUID": "ad1bc93d-0914-4e40-86df-152d11b278dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object",
              "fullTitle": "Test with backend should gave tags with routing object",
              "timedOut": null,
              "duration": 2679,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//it.only() to run only this test\ncy.get('.tag-list').should('contain', 'cypress').and('contain', 'automation').and('contain', 'testing');",
              "err": {},
              "uuid": "db5f9dae-7c83-4475-8d64-d4f4c57dc64d",
              "parentUUID": "ad1bc93d-0914-4e40-86df-152d11b278dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object",
              "fullTitle": "Test with backend should gave tags with routing object",
              "timedOut": null,
              "duration": 2911,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//it.only() to run only this test\ncy.get('.tag-list').should('contain', 'cypress').and('contain', 'automation').and('contain', 'testing');",
              "err": {},
              "uuid": "14d6c799-b77c-40f9-a8f7-130157838c53",
              "parentUUID": "ad1bc93d-0914-4e40-86df-152d11b278dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the global feed likes count",
              "fullTitle": "Test with backend Verify the global feed likes count",
              "timedOut": null,
              "duration": 4398,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Feed tab GET Request fixture call URL without json file small Response directly passing as param\n// cy.route('GET', '**/articles/feed*', '{\"articles\":[],\"articlesCount\":0}') \ncy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n}); // Global Feeb tab GET request fixture call URL through json file from fixtures json\n// cy.route('GET', '**/articles*', 'fixture:articles.json') \ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n}); // Verify the Global Feed tab fixture articles favorite count\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(listOfButtons => {\n  expect(listOfButtons[0]).to.contain(1);\n  expect(listOfButtons[1]).to.contain(5);\n}); // fixture() method to read the fixture files\ncy.fixture('articles').then(file => {\n  const articlelink = file.articles[1].slug; // arcticle name/link from the fixture mocked responsed json file\n  // cy.route('POST', '**/articles/'+articlelink+'/favorite', file) // concatenate the POST method request URL w.r.t to our fixture file\n  cy.intercept('POST', '**/articles/' + articlelink + '/favorite', file);\n});\ncy.get('app-article-list button').eq(1) // for second article which on 1 index\n.click().should('contain', '4'); //assertion fav. icon after click on fav. icon",
              "err": {},
              "uuid": "50c2065c-aec7-47e4-a75a-a036838316ff",
              "parentUUID": "ad1bc93d-0914-4e40-86df-152d11b278dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To delete a new article in global feed",
              "fullTitle": "Test with backend To delete a new article in global feed",
              "timedOut": null,
              "duration": 2259,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const bodyRequest = {\n  \"article\": {\n    \"tagList\": [],\n    \"title\": \"Request from APIs\",\n    \"description\": \"API testing is easy\",\n    \"body\": \"Angular is cool\"\n  }\n}; // 1 Call login API\n//   cy.request('POST', Cypress.env('apiUrl')+'/api/users/login', UserCredentials)\n//   .its('body').then(body =>{\n//       const token = body.user.token\ncy.get('@token').then(token => {\n  // token getting from commands.js\n  // 2 get token from login API & then call articles API with authorization\n  cy.request({\n    url: Cypress.env('apiUrl') + '/api/articles/',\n    //cocatenate the apiUrl from env variable\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    // \"Token\" text concatenation with token value from variable\n    method: 'POST',\n    body: bodyRequest\n  }).then(response => {\n    expect(response.status).to.equal(200); // Assertion for 200 response match\n  }); // UI actions\n  cy.wait(500);\n  cy.contains(' Global Feed ').click();\n  cy.get('.article-preview').first().click();\n  cy.get('.article-actions').contains(' Delete Article ').click(); // get Articles objects listing after deletion of first & assertion\n  cy.wait(500);\n  cy.request({\n    url: Cypress.env('apiUrl') + '/api/articles?limit=10&offset=0',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    method: 'GET'\n  }).its('body').then(body => {\n    //   console.log(body)\n    expect(body.articles[0].title).not.to.equal('Request from APIs');\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttps://conduit.productionready.io/api/articles/\n\nThe response we received from your web server was:\n\n  > 422: Unprocessable Entity\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://conduit.productionready.io/api/articles/\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFydGVtLmJvbmRhcjE2QGdtYWlsLmNvbSIsInVzZXJuYW1lIjoiYXJ0ZW0iLCJpYXQiOjE2NTY5OTk0ODgsImV4cCI6MTY2MjE4MzQ4OH0.0E9rh9pvhfFvZjto5kCZWN6pA5q9myQVTTIihJtzMOw\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/10.0.1 Chrome/100.0.4896.75 Electron/18.0.4 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 115,\n  \"referer\": \"https://conduit.productionready.io/api/articles/\"\n}\nBody: {\"article\":{\"tagList\":[],\"title\":\"Request from APIs\",\"description\":\"API testing is easy\",\"body\":\"Angular is cool\"}}\nRedirects: [\n  \"307: https://api.realworld.io/api/articles/\"\n]\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 422 - Unprocessable Entity\nHeaders: {\n  \"date\": \"Tue, 05 Jul 2022 05:38:10 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"39\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"27-BNeuaWQ7DHvW/r+pl+qdJiF06Is\\\"\",\n  \"via\": \"1.1 vegur\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=Gid4B7Fzt1zAUVlZJDY7X2zc7SZ0T%2FX4m9fA8iCUgeqYneMJxdzwrq6oGLputfBM7c9twALzaTKAOs%2Bf5Bz2HohvxxWPiJ3pXmerfHuusMSLgwI3fGDCfM46hIP52eQvVfgc\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"cf-ray\": \"725dc0ba0a469e3a-SIN\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n}\nBody: {\n  \"errors\": {\n    \"title\": [\n      \"must be unique\"\n    ]\n  }\n}\n\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttps://conduit.productionready.io/api/articles/\n\nThe response we received from your web server was:\n\n  > 422: Unprocessable Entity\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://conduit.productionready.io/api/articles/\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFydGVtLmJvbmRhcjE2QGdtYWlsLmNvbSIsInVzZXJuYW1lIjoiYXJ0ZW0iLCJpYXQiOjE2NTY5OTk0ODgsImV4cCI6MTY2MjE4MzQ4OH0.0E9rh9pvhfFvZjto5kCZWN6pA5q9myQVTTIihJtzMOw\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/10.0.1 Chrome/100.0.4896.75 Electron/18.0.4 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 115,\n  \"referer\": \"https://conduit.productionready.io/api/articles/\"\n}\nBody: {\"article\":{\"tagList\":[],\"title\":\"Request from APIs\",\"description\":\"API testing is easy\",\"body\":\"Angular is cool\"}}\nRedirects: [\n  \"307: https://api.realworld.io/api/articles/\"\n]\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 422 - Unprocessable Entity\nHeaders: {\n  \"date\": \"Tue, 05 Jul 2022 05:38:10 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"39\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"27-BNeuaWQ7DHvW/r+pl+qdJiF06Is\\\"\",\n  \"via\": \"1.1 vegur\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=Gid4B7Fzt1zAUVlZJDY7X2zc7SZ0T%2FX4m9fA8iCUgeqYneMJxdzwrq6oGLputfBM7c9twALzaTKAOs%2Bf5Bz2HohvxxWPiJ3pXmerfHuusMSLgwI3fGDCfM46hIP52eQvVfgc\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"cf-ray\": \"725dc0ba0a469e3a-SIN\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n}\nBody: {\n  \"errors\": {\n    \"title\": [\n      \"must be unique\"\n    ]\n  }\n}\n\n\nhttps://on.cypress.io/request\n    at http://localhost:4200/__cypress/runner/cypress_runner.js:158470:80\n    at tryCatcher (http://localhost:4200/__cypress/runner/cypress_runner.js:13012:23)\n    at Promise._settlePromiseFromHandler (http://localhost:4200/__cypress/runner/cypress_runner.js:10947:31)\n    at Promise._settlePromise (http://localhost:4200/__cypress/runner/cypress_runner.js:11004:18)\n    at Promise._settlePromise0 (http://localhost:4200/__cypress/runner/cypress_runner.js:11049:10)\n    at Promise._settlePromises (http://localhost:4200/__cypress/runner/cypress_runner.js:11129:18)\n    at _drainQueueStep (http://localhost:4200/__cypress/runner/cypress_runner.js:7719:12)\n    at _drainQueue (http://localhost:4200/__cypress/runner/cypress_runner.js:7712:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:7728:5)\n    at Async.drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:7598:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\e2e\\firstTest.cy.js:226:10)",
                "diff": null
              },
              "uuid": "bcd8e09f-edca-44d2-b614-a200c75ffc0e",
              "parentUUID": "ad1bc93d-0914-4e40-86df-152d11b278dd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "db5f9dae-7c83-4475-8d64-d4f4c57dc64d",
            "14d6c799-b77c-40f9-a8f7-130157838c53",
            "50c2065c-aec7-47e4-a75a-a036838316ff"
          ],
          "failures": [
            "3ed4c6b0-8c4e-4085-bda9-8cc3a53d567b",
            "ae062c53-ff40-4044-9f85-47e273616d32",
            "bcd8e09f-edca-44d2-b614-a200c75ffc0e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 25001,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7438e2a3-4ed2-4930-99cc-b417b5371644",
      "title": "",
      "fullFile": "cypress\\e2e\\secondTest.cy.js",
      "file": "cypress\\e2e\\secondTest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d1811fe8-fc27-42c0-a8ce-35821957ba6c",
          "title": "Test log out",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify user can logout sucessfully",
              "fullTitle": "Test log out Verify user can logout sucessfully",
              "timedOut": null,
              "duration": 4446,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Settings').click();\ncy.contains(' Or click here to logout. ').click();\ncy.get('.navbar-nav').should('contain', ' Sign up');",
              "err": {},
              "uuid": "6fb33766-0618-40d0-ab6f-6fc41dd5a7f6",
              "parentUUID": "d1811fe8-fc27-42c0-a8ce-35821957ba6c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6fb33766-0618-40d0-ab6f-6fc41dd5a7f6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4446,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "bd3d4626-8446-4953-8d10-5e19c0b8320f",
      "title": "",
      "fullFile": "cypress\\e2e\\firstTest.cy.js",
      "file": "cypress\\e2e\\firstTest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9bf5cead-1ae0-420a-8491-4fdff6245542",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify correct request and response",
              "fullTitle": "Test with backend Verify correct request and response",
              "timedOut": null,
              "duration": 7435,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// to it.skip() this test\n// striked because they will be deprecated in future but working for now\n// cy.server() // to create the cypress server\n// cy.route('POST', '**/articles').as('postArticles') // route() for giving method, end point & as() for alias \ncy.intercept('POST', '**/articles').as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('This is title');\ncy.get('[formcontrolname=\"description\"]').type('this is description');\ncy.get('[formcontrolname=\"body\"]').type('this is a body of the Article'); // cy.get('[placeholder=\"Enter tags\"]').type('artcl_003')\ncy.get('button').contains('Publish Article').click({\n  force: true\n});\ncy.wait('@postArticles'); // @ used with alias to wait for the request\ncy.get('@postArticles').then(xhr => {\n  console.log(xhr); // to see the request in console log\n  expect(xhr.response.statusCode).to.equal(200); // Assertions\n  expect(xhr.request.body.article.body).to.equal('this is a body of the Article');\n  expect(xhr.response.body.article.description).to.equal('this is description');\n});",
              "err": {
                "message": "AssertionError: expected 307 to equal 200",
                "estack": "AssertionError: expected 307 to equal 200\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\e2e\\firstTest.cy.js:136:42)",
                "diff": "- 307\n+ 200\n"
              },
              "uuid": "672dfbdd-48b3-455c-bbb7-426fb56688fd",
              "parentUUID": "9bf5cead-1ae0-420a-8491-4fdff6245542",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Intercepting and modifying the request and response",
              "fullTitle": "Test with backend Intercepting and modifying the request and response",
              "timedOut": null,
              "duration": 4533,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// to it.skip() this test\n// striked because they will be deprecated in future but working for now\n// cy.server() // to create the cypress server\n// cy.route('POST', '**/articles').as('postArticles') // route() for giving method, end point & as() for alias \n// cy.intercept('POST', '**/articles', (req) =>{\n//     req.body.article.description = \"This is description 2\" // to modify the request\n// }).as('postArticles')\ncy.intercept('POST', '**/articles', req => {\n  req.reply(res => {\n    expect(res.body.article.description).to.equal('This is description');\n    res.body.article.description = \"This is description 2\";\n  });\n}).as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('446Deweerrs');\ncy.get('[formcontrolname=\"description\"]').type('This is description');\ncy.get('[formcontrolname=\"body\"]').type('This is a body of the Article'); // cy.get('[placeholder=\"Enter tags\"]').type('artcl_003')\ncy.contains('Publish Article').click();\ncy.wait('@postArticles'); // @ used with alias to wait for the request\ncy.get('@postArticles').then(fetch => {\n  // console.log(JSON.parse(JSON.stringify(xhr.response)))  // to see the request in console log\n  console.log(fetch.response);\n  expect(fetch.response.statusCode).to.equal(307); // Assertions\n  expect(fetch.response.body.article.body).to.equal('This is a body of the Article'); // console.log(xhr.request.body.article.description)\n  expect(fetch.response.body.article.description).to.equal('This is description 2');\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'description')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'description')\n    at eval (http://localhost:4200/__cypress/tests?p=cypress\\e2e\\firstTest.cy.js:152:33)",
                "diff": null
              },
              "uuid": "252f0e79-963b-4d20-b5ca-f669cb4314e3",
              "parentUUID": "9bf5cead-1ae0-420a-8491-4fdff6245542",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object",
              "fullTitle": "Test with backend should gave tags with routing object",
              "timedOut": null,
              "duration": 3336,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//it.only() to run only this test\ncy.get('.tag-list').should('contain', 'cypress').and('contain', 'automation').and('contain', 'testing');",
              "err": {},
              "uuid": "975cf3b3-3f15-4be2-902a-4ca5bc497f9e",
              "parentUUID": "9bf5cead-1ae0-420a-8491-4fdff6245542",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object",
              "fullTitle": "Test with backend should gave tags with routing object",
              "timedOut": null,
              "duration": 5956,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//it.only() to run only this test\ncy.get('.tag-list').should('contain', 'cypress').and('contain', 'automation').and('contain', 'testing');",
              "err": {},
              "uuid": "6ba15dc8-0db3-4e95-8b75-0226cbf07749",
              "parentUUID": "9bf5cead-1ae0-420a-8491-4fdff6245542",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the global feed likes count",
              "fullTitle": "Test with backend Verify the global feed likes count",
              "timedOut": null,
              "duration": 5202,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Feed tab GET Request fixture call URL without json file small Response directly passing as param\n// cy.route('GET', '**/articles/feed*', '{\"articles\":[],\"articlesCount\":0}') \ncy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n}); // Global Feeb tab GET request fixture call URL through json file from fixtures json\n// cy.route('GET', '**/articles*', 'fixture:articles.json') \ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n}); // Verify the Global Feed tab fixture articles favorite count\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(listOfButtons => {\n  expect(listOfButtons[0]).to.contain(1);\n  expect(listOfButtons[1]).to.contain(5);\n}); // fixture() method to read the fixture files\ncy.fixture('articles').then(file => {\n  const articlelink = file.articles[1].slug; // arcticle name/link from the fixture mocked responsed json file\n  // cy.route('POST', '**/articles/'+articlelink+'/favorite', file) // concatenate the POST method request URL w.r.t to our fixture file\n  cy.intercept('POST', '**/articles/' + articlelink + '/favorite', file);\n});\ncy.get('app-article-list button').eq(1) // for second article which on 1 index\n.click().should('contain', '4'); //assertion fav. icon after click on fav. icon",
              "err": {},
              "uuid": "ee17c550-edd2-4120-9d63-68daf5c767e2",
              "parentUUID": "9bf5cead-1ae0-420a-8491-4fdff6245542",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To delete a new article in global feed",
              "fullTitle": "Test with backend To delete a new article in global feed",
              "timedOut": null,
              "duration": 2476,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const bodyRequest = {\n  \"article\": {\n    \"tagList\": [],\n    \"title\": \"Request from APIs\",\n    \"description\": \"API testing is easy\",\n    \"body\": \"Angular is cool\"\n  }\n}; // 1 Call login API\n//   cy.request('POST', Cypress.env('apiUrl')+'/api/users/login', UserCredentials)\n//   .its('body').then(body =>{\n//       const token = body.user.token\ncy.get('@token').then(token => {\n  // token getting from commands.js\n  // 2 get token from login API & then call articles API with authorization\n  cy.request({\n    url: Cypress.env('apiUrl') + '/api/articles/',\n    //cocatenate the apiUrl from env variable\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    // \"Token\" text concatenation with token value from variable\n    method: 'POST',\n    body: bodyRequest\n  }).then(response => {\n    expect(response.status).to.equal(200); // Assertion for 200 response match\n  }); // UI actions\n  cy.wait(500);\n  cy.contains(' Title1656956844385 ').click();\n  cy.get('.article-preview').first().click();\n  cy.get('.article-actions').contains(' Delete Article ').click(); // get Articles objects listing after deletion of first & assertion\n  cy.wait(500);\n  cy.request({\n    url: Cypress.env('apiUrl') + '/api/articles?limit=10&offset=0',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    method: 'GET'\n  }).its('body').then(body => {\n    //   console.log(body)\n    expect(body.articles[0].title).not.to.equal('Request from APIs');\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttps://conduit.productionready.io/api/articles/\n\nThe response we received from your web server was:\n\n  > 422: Unprocessable Entity\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://conduit.productionready.io/api/articles/\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFydGVtLmJvbmRhcjE2QGdtYWlsLmNvbSIsInVzZXJuYW1lIjoiYXJ0ZW0iLCJpYXQiOjE2NTY5OTk5MDIsImV4cCI6MTY2MjE4MzkwMn0.m9uKirGJarDQt6nbVdN7n2B8Qr_BwZ7iiwXT2FWJs6c\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/10.0.1 Chrome/100.0.4896.75 Electron/18.0.4 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 115,\n  \"referer\": \"https://conduit.productionready.io/api/articles/\"\n}\nBody: {\"article\":{\"tagList\":[],\"title\":\"Request from APIs\",\"description\":\"API testing is easy\",\"body\":\"Angular is cool\"}}\nRedirects: [\n  \"307: https://api.realworld.io/api/articles/\"\n]\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 422 - Unprocessable Entity\nHeaders: {\n  \"date\": \"Tue, 05 Jul 2022 05:45:03 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"39\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"27-BNeuaWQ7DHvW/r+pl+qdJiF06Is\\\"\",\n  \"via\": \"1.1 vegur\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=IJ3UiZLUcv6OU62qcCOUhpMgBL%2F7AySGPDJJOU4YwiinClmjgaNeclbVii1BxtmGq7cttOYhziili8TC%2Fhv6HLDANk9VMFS6gHrPlRjfHq%2FRr4FAxYRSYgt3UPjU8B3ojsBj\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"cf-ray\": \"725dcad4a96c91c6-SIN\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n}\nBody: {\n  \"errors\": {\n    \"title\": [\n      \"must be unique\"\n    ]\n  }\n}\n\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttps://conduit.productionready.io/api/articles/\n\nThe response we received from your web server was:\n\n  > 422: Unprocessable Entity\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://conduit.productionready.io/api/articles/\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFydGVtLmJvbmRhcjE2QGdtYWlsLmNvbSIsInVzZXJuYW1lIjoiYXJ0ZW0iLCJpYXQiOjE2NTY5OTk5MDIsImV4cCI6MTY2MjE4MzkwMn0.m9uKirGJarDQt6nbVdN7n2B8Qr_BwZ7iiwXT2FWJs6c\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/10.0.1 Chrome/100.0.4896.75 Electron/18.0.4 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 115,\n  \"referer\": \"https://conduit.productionready.io/api/articles/\"\n}\nBody: {\"article\":{\"tagList\":[],\"title\":\"Request from APIs\",\"description\":\"API testing is easy\",\"body\":\"Angular is cool\"}}\nRedirects: [\n  \"307: https://api.realworld.io/api/articles/\"\n]\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 422 - Unprocessable Entity\nHeaders: {\n  \"date\": \"Tue, 05 Jul 2022 05:45:03 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"39\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"27-BNeuaWQ7DHvW/r+pl+qdJiF06Is\\\"\",\n  \"via\": \"1.1 vegur\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=IJ3UiZLUcv6OU62qcCOUhpMgBL%2F7AySGPDJJOU4YwiinClmjgaNeclbVii1BxtmGq7cttOYhziili8TC%2Fhv6HLDANk9VMFS6gHrPlRjfHq%2FRr4FAxYRSYgt3UPjU8B3ojsBj\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"cf-ray\": \"725dcad4a96c91c6-SIN\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n}\nBody: {\n  \"errors\": {\n    \"title\": [\n      \"must be unique\"\n    ]\n  }\n}\n\n\nhttps://on.cypress.io/request\n    at http://localhost:4200/__cypress/runner/cypress_runner.js:158470:80\n    at tryCatcher (http://localhost:4200/__cypress/runner/cypress_runner.js:13012:23)\n    at Promise._settlePromiseFromHandler (http://localhost:4200/__cypress/runner/cypress_runner.js:10947:31)\n    at Promise._settlePromise (http://localhost:4200/__cypress/runner/cypress_runner.js:11004:18)\n    at Promise._settlePromise0 (http://localhost:4200/__cypress/runner/cypress_runner.js:11049:10)\n    at Promise._settlePromises (http://localhost:4200/__cypress/runner/cypress_runner.js:11129:18)\n    at _drainQueueStep (http://localhost:4200/__cypress/runner/cypress_runner.js:7719:12)\n    at _drainQueue (http://localhost:4200/__cypress/runner/cypress_runner.js:7712:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:7728:5)\n    at Async.drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:7598:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\e2e\\firstTest.cy.js:226:10)",
                "diff": null
              },
              "uuid": "09c3b5af-1535-450c-80d0-059083d2cfb2",
              "parentUUID": "9bf5cead-1ae0-420a-8491-4fdff6245542",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "975cf3b3-3f15-4be2-902a-4ca5bc497f9e",
            "6ba15dc8-0db3-4e95-8b75-0226cbf07749",
            "ee17c550-edd2-4120-9d63-68daf5c767e2"
          ],
          "failures": [
            "672dfbdd-48b3-455c-bbb7-426fb56688fd",
            "252f0e79-963b-4d20-b5ca-f669cb4314e3",
            "09c3b5af-1535-450c-80d0-059083d2cfb2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 28938,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "078452a7-ad70-42aa-a305-b249bcd7a1a1",
      "title": "",
      "fullFile": "cypress\\e2e\\secondTest.cy.js",
      "file": "cypress\\e2e\\secondTest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dbc6b14b-6b36-4d46-bcb8-6cf2d155ac03",
          "title": "Test log out",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify user can logout sucessfully",
              "fullTitle": "Test log out Verify user can logout sucessfully",
              "timedOut": null,
              "duration": 3449,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Settings').click();\ncy.contains(' Or click here to logout. ').click();\ncy.get('.navbar-nav').should('contain', ' Sign up');",
              "err": {},
              "uuid": "8769eac0-1e7e-41d2-bf62-090487d22774",
              "parentUUID": "dbc6b14b-6b36-4d46-bcb8-6cf2d155ac03",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8769eac0-1e7e-41d2-bf62-090487d22774"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3449,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "59e9afef-06b0-47c5-937d-7624da17842d",
      "title": "",
      "fullFile": "cypress\\e2e\\firstTest.cy.js",
      "file": "cypress\\e2e\\firstTest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1a389720-c9ec-4158-9f50-18f2e289340e",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify correct request and response",
              "fullTitle": "Test with backend Verify correct request and response",
              "timedOut": null,
              "duration": 9300,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// to it.skip() this test\n// striked because they will be deprecated in future but working for now\n// cy.server() // to create the cypress server\n// cy.route('POST', '**/articles').as('postArticles') // route() for giving method, end point & as() for alias \ncy.intercept('POST', '**/articles').as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('This is title');\ncy.get('[formcontrolname=\"description\"]').type('this is description');\ncy.get('[formcontrolname=\"body\"]').type('this is a body of the Article'); // cy.get('[placeholder=\"Enter tags\"]').type('artcl_003')\ncy.get('button').contains('Publish Article').click({\n  force: true\n});\ncy.wait('@postArticles'); // @ used with alias to wait for the request\ncy.get('@postArticles').then(xhr => {\n  console.log(xhr); // to see the request in console log\n  expect(xhr.response.statusCode).to.equal(200); // Assertions\n  expect(xhr.request.body.article.body).to.equal('this is a body of the Article');\n  expect(xhr.response.body.article.description).to.equal('this is description');\n});",
              "err": {
                "message": "AssertionError: expected 307 to equal 200",
                "estack": "AssertionError: expected 307 to equal 200\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\e2e\\firstTest.cy.js:136:42)",
                "diff": "- 307\n+ 200\n"
              },
              "uuid": "bc905251-97fe-4871-959e-62aa8e757214",
              "parentUUID": "1a389720-c9ec-4158-9f50-18f2e289340e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Intercepting and modifying the request and response",
              "fullTitle": "Test with backend Intercepting and modifying the request and response",
              "timedOut": null,
              "duration": 7614,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// to it.skip() this test\n// striked because they will be deprecated in future but working for now\n// cy.server() // to create the cypress server\n// cy.route('POST', '**/articles').as('postArticles') // route() for giving method, end point & as() for alias \n// cy.intercept('POST', '**/articles', (req) =>{\n//     req.body.article.description = \"This is description 2\" // to modify the request\n// }).as('postArticles')\ncy.intercept('POST', '**/articles', req => {\n  req.reply(res => {\n    expect(res.body.article.description).to.equal('This is description');\n    res.body.article.description = \"This is description 2\";\n  });\n}).as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('446Deweerrs');\ncy.get('[formcontrolname=\"description\"]').type('This is description');\ncy.get('[formcontrolname=\"body\"]').type('This is a body of the Article'); // cy.get('[placeholder=\"Enter tags\"]').type('artcl_003')\ncy.contains('Publish Article').click();\ncy.wait('@postArticles'); // @ used with alias to wait for the request\ncy.get('@postArticles').then(fetch => {\n  // console.log(JSON.parse(JSON.stringify(xhr.response)))  // to see the request in console log\n  console.log(fetch.response);\n  expect(fetch.response.statusCode).to.equal(307); // Assertions\n  expect(fetch.response.body.article.body).to.equal('This is a body of the Article'); // console.log(xhr.request.body.article.description)\n  expect(fetch.response.body.article.description).to.equal('This is description 2');\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'description')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'description')\n    at eval (http://localhost:4200/__cypress/tests?p=cypress\\e2e\\firstTest.cy.js:152:33)",
                "diff": null
              },
              "uuid": "3c1bafd5-50fe-4188-8dfa-18b741a61b72",
              "parentUUID": "1a389720-c9ec-4158-9f50-18f2e289340e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object",
              "fullTitle": "Test with backend should gave tags with routing object",
              "timedOut": null,
              "duration": 4937,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//it.only() to run only this test\ncy.get('.tag-list').should('contain', 'cypress').and('contain', 'automation').and('contain', 'testing');",
              "err": {},
              "uuid": "a769bbf1-a213-46cb-be67-e552fe5f7426",
              "parentUUID": "1a389720-c9ec-4158-9f50-18f2e289340e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should gave tags with routing object",
              "fullTitle": "Test with backend should gave tags with routing object",
              "timedOut": null,
              "duration": 2853,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//it.only() to run only this test\ncy.get('.tag-list').should('contain', 'cypress').and('contain', 'automation').and('contain', 'testing');",
              "err": {},
              "uuid": "640dfcdb-c6f5-4385-a09e-7693d41a50bb",
              "parentUUID": "1a389720-c9ec-4158-9f50-18f2e289340e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the global feed likes count",
              "fullTitle": "Test with backend Verify the global feed likes count",
              "timedOut": null,
              "duration": 8665,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Feed tab GET Request fixture call URL without json file small Response directly passing as param\n// cy.route('GET', '**/articles/feed*', '{\"articles\":[],\"articlesCount\":0}') \ncy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n}); // Global Feeb tab GET request fixture call URL through json file from fixtures json\n// cy.route('GET', '**/articles*', 'fixture:articles.json') \ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n}); // Verify the Global Feed tab fixture articles favorite count\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(listOfButtons => {\n  expect(listOfButtons[0]).to.contain(1);\n  expect(listOfButtons[1]).to.contain(5);\n}); // fixture() method to read the fixture files\ncy.fixture('articles').then(file => {\n  const articlelink = file.articles[1].slug; // arcticle name/link from the fixture mocked responsed json file\n  // cy.route('POST', '**/articles/'+articlelink+'/favorite', file) // concatenate the POST method request URL w.r.t to our fixture file\n  cy.intercept('POST', '**/articles/' + articlelink + '/favorite', file);\n});\ncy.get('app-article-list button').eq(1) // for second article which on 1 index\n.click().should('contain', '4'); //assertion fav. icon after click on fav. icon",
              "err": {},
              "uuid": "21fcd355-9fe8-46aa-9597-db62ef530e45",
              "parentUUID": "1a389720-c9ec-4158-9f50-18f2e289340e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To delete a new article in global feed",
              "fullTitle": "Test with backend To delete a new article in global feed",
              "timedOut": null,
              "duration": 3386,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const bodyRequest = {\n  \"article\": {\n    \"tagList\": [],\n    \"title\": \"Request from APIs\",\n    \"description\": \"API testing is easy\",\n    \"body\": \"Angular is cool\"\n  }\n}; // 1 Call login API\n//   cy.request('POST', Cypress.env('apiUrl')+'/api/users/login', UserCredentials)\n//   .its('body').then(body =>{\n//       const token = body.user.token\ncy.get('@token').then(token => {\n  // token getting from commands.js\n  // 2 get token from login API & then call articles API with authorization\n  cy.request({\n    url: Cypress.env('apiUrl') + '/api/articles/',\n    //cocatenate the apiUrl from env variable\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    // \"Token\" text concatenation with token value from variable\n    method: 'POST',\n    body: bodyRequest\n  }).then(response => {\n    expect(response.status).to.equal(200); // Assertion for 200 response match\n  }); // UI actions\n  cy.wait(500);\n  cy.contains(' Global Feed ').click();\n  cy.get('.article-preview').first().click();\n  cy.get('.article-actions').contains(' Delete Article ').click(); // get Articles objects listing after deletion of first & assertion\n  cy.wait(500);\n  cy.request({\n    url: Cypress.env('apiUrl') + '/api/articles?limit=10&offset=0',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    method: 'GET'\n  }).its('body').then(body => {\n    //   console.log(body)\n    expect(body.articles[0].title).not.to.equal('Request from APIs');\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttps://conduit.productionready.io/api/articles/\n\nThe response we received from your web server was:\n\n  > 422: Unprocessable Entity\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://conduit.productionready.io/api/articles/\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFydGVtLmJvbmRhcjE2QGdtYWlsLmNvbSIsInVzZXJuYW1lIjoiYXJ0ZW0iLCJpYXQiOjE2NTY5OTgyMjksImV4cCI6MTY2MjE4MjIyOX0.nHFG9gN-oywd-ZZDnsNLdeRbl0N-LL3NoLoVWqoQ2TU\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/10.0.1 Chrome/100.0.4896.75 Electron/18.0.4 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 115,\n  \"referer\": \"https://conduit.productionready.io/api/articles/\"\n}\nBody: {\"article\":{\"tagList\":[],\"title\":\"Request from APIs\",\"description\":\"API testing is easy\",\"body\":\"Angular is cool\"}}\nRedirects: [\n  \"307: https://api.realworld.io/api/articles/\"\n]\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 422 - Unprocessable Entity\nHeaders: {\n  \"date\": \"Tue, 05 Jul 2022 05:17:11 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"39\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"27-BNeuaWQ7DHvW/r+pl+qdJiF06Is\\\"\",\n  \"via\": \"1.1 vegur\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=VgKgBr2I67VSWd6iRUb3DyHyHPWCLitNZHdAlDsvQ7vau50WC3vxz%2BwskJODHawk9TxnI6cVVJhA1%2BcgvrmFIqKe04FQv0thEhDcjbBIkHUBzy00ohEolEwdQEGpwEZyThgo\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"cf-ray\": \"725da200da21ab50-SIN\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n}\nBody: {\n  \"errors\": {\n    \"title\": [\n      \"must be unique\"\n    ]\n  }\n}\n\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttps://conduit.productionready.io/api/articles/\n\nThe response we received from your web server was:\n\n  > 422: Unprocessable Entity\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://conduit.productionready.io/api/articles/\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFydGVtLmJvbmRhcjE2QGdtYWlsLmNvbSIsInVzZXJuYW1lIjoiYXJ0ZW0iLCJpYXQiOjE2NTY5OTgyMjksImV4cCI6MTY2MjE4MjIyOX0.nHFG9gN-oywd-ZZDnsNLdeRbl0N-LL3NoLoVWqoQ2TU\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/10.0.1 Chrome/100.0.4896.75 Electron/18.0.4 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 115,\n  \"referer\": \"https://conduit.productionready.io/api/articles/\"\n}\nBody: {\"article\":{\"tagList\":[],\"title\":\"Request from APIs\",\"description\":\"API testing is easy\",\"body\":\"Angular is cool\"}}\nRedirects: [\n  \"307: https://api.realworld.io/api/articles/\"\n]\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 422 - Unprocessable Entity\nHeaders: {\n  \"date\": \"Tue, 05 Jul 2022 05:17:11 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"39\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"27-BNeuaWQ7DHvW/r+pl+qdJiF06Is\\\"\",\n  \"via\": \"1.1 vegur\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"expect-ct\": \"max-age=604800, report-uri=\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\"\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=VgKgBr2I67VSWd6iRUb3DyHyHPWCLitNZHdAlDsvQ7vau50WC3vxz%2BwskJODHawk9TxnI6cVVJhA1%2BcgvrmFIqKe04FQv0thEhDcjbBIkHUBzy00ohEolEwdQEGpwEZyThgo\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"cf-ray\": \"725da200da21ab50-SIN\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n}\nBody: {\n  \"errors\": {\n    \"title\": [\n      \"must be unique\"\n    ]\n  }\n}\n\n\nhttps://on.cypress.io/request\n    at http://localhost:4200/__cypress/runner/cypress_runner.js:158470:80\n    at tryCatcher (http://localhost:4200/__cypress/runner/cypress_runner.js:13012:23)\n    at Promise._settlePromiseFromHandler (http://localhost:4200/__cypress/runner/cypress_runner.js:10947:31)\n    at Promise._settlePromise (http://localhost:4200/__cypress/runner/cypress_runner.js:11004:18)\n    at Promise._settlePromise0 (http://localhost:4200/__cypress/runner/cypress_runner.js:11049:10)\n    at Promise._settlePromises (http://localhost:4200/__cypress/runner/cypress_runner.js:11129:18)\n    at _drainQueueStep (http://localhost:4200/__cypress/runner/cypress_runner.js:7719:12)\n    at _drainQueue (http://localhost:4200/__cypress/runner/cypress_runner.js:7712:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:7728:5)\n    at Async.drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:7598:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress\\e2e\\firstTest.cy.js:226:10)",
                "diff": null
              },
              "uuid": "6594ba1f-5a48-45fc-bd17-71f2852f797c",
              "parentUUID": "1a389720-c9ec-4158-9f50-18f2e289340e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a769bbf1-a213-46cb-be67-e552fe5f7426",
            "640dfcdb-c6f5-4385-a09e-7693d41a50bb",
            "21fcd355-9fe8-46aa-9597-db62ef530e45"
          ],
          "failures": [
            "bc905251-97fe-4871-959e-62aa8e757214",
            "3c1bafd5-50fe-4188-8dfa-18b741a61b72",
            "6594ba1f-5a48-45fc-bd17-71f2852f797c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 36755,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}